[tool.poetry]
name = "test"
version = "0.1.0"
description = "Based on the provided user feedback, the task involves creating an API that echoes back any text it receives. This requirement signifies the need for a simple yet functional API endpoint that accepts text input from the user and returns the same text as the output. Utilizing the specified tech stack, which includes Python as the programming language, FastAPI for the API framework, PostgreSQL for the database, and Prisma as the Object Relational Mapping (ORM) tool, the implementation will focus on setting up a RESTful API Service. The FastAPI framework will be utilized to set up the API routes, taking advantage of its asynchronous request handling and its automatic interactive API documentation. Since the core functionality is to echo back received text, the use of PostgreSQL and Prisma might only come into play if there's a need to store the requests or responses for logging or monitoring purposes. To summarize, the API will be a straightforward implementation focusing primarily on request handling and response mechanism to fulfill the echo functionality desired."
authors = ["AutoGPT <info@agpt.co>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.11"
fastapi = "^0.78.0"
passlib = {version = "^1.7.4", extras = ["bcrypt"]}
prisma = "*"
pydantic = "*"
python-jose = {version = "^3.3.0", extras = ["cryptography"]}
uvicorn = "*"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
